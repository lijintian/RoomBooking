@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title></title>
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script type="text/javascript">
        /*===========================================================================================================================*/

        //Global Variable Begin
        var everything=new Array();
        var loadingInterval;
        var canvas;
        var ctx;
        var currentRoom;
        var tools

        var sourceCount = 0;
        var totalSourceCount = 2;

        //鼠标按下选中的对象
        var mouseDownObj;


        var stage = {
            margin: 10,
            width: 500,
            height:500,
        }

        var toolBar = {
            width: 50,
            margin: 5,
        }

        var toolIcon = {
            width: toolBar.width - 2 * toolBar.margin,
            height: toolBar.width - 2 * toolBar.margin,
        }

        var equipmentTypes = {
            chair: Chair.name,
            desk: Desk.name
        }

        var types = {
            equipment: Equipment.name,
            room:Room.name
        } 

        //Global Variable End

        /*===========================================================================================================================*/
        
        //Main Begin

        $(function () {
            canvas = document.getElementById("roomCanvas");
            ctx = canvas.getContext("2d");

            canvas.addEventListener("mousedown", mouseDown, false);
            canvas.addEventListener("mousemove", mouseMove, false);
            canvas.addEventListener("mouseup", mouseUp, false);

            showLoading();
            loadingInterval = window.setInterval(load, 100);
        });

        //Main End

        /*===========================================================================================================================*/

        //Event Begin

        function load() {
            refreshLoadPercent();
            if (sourceCount < totalSourceCount) {
                return;
            }
            else {
                window.clearInterval(loadingInterval);
                window.setTimeout(hideLoading,1000);
                generateRoom();
                drawEverything();
            }
        }

        function generateRoom() {
            //重新生成要清空everything
            everything = new Array();

            var width = $("#txtRoomWidth").val();
            var height = $("#txtRoomHeight").val();

            if (width.trim() != "") {
                width = new Number(width);
            }
            else {
                width = 0;
            }
            if (height.trim() != "") {
                height = new Number(height);
            }
            else {
                height = 0;
            }

            var roomX = stage.margin + toolBar.width;
            var roomY = stage.margin;

            var roomWidth = width;
            var roomHeight = height;

            var canvasWidth = stage.margin * 2 + width + toolBar.width;
            var canvasHeight = stage.margin * 2 + height;

            stage.width = canvasWidth;
            stage.height = canvasHeight;

            $(canvas).attr("width", canvasWidth);
            $(canvas).attr("height", canvasHeight);
             
            var roomPosition = new Position(roomX, roomY);
            var roomSize = new Size(roomWidth, roomHeight);

            currentRoom = new Room(roomPosition, roomSize);

            everything.push(currentRoom);

            //currentRoom.draw();

            generateToolBar();
            return false;
        }

        function generateToolBar() {
            tools = new Array();
            
            var chairToolPosition = new Position(0, 0);
            var chairToolSize = new Size(toolIcon.width, toolIcon.height);
            var chairTool = new Chair(chairToolPosition, chairToolSize, $("#imgChair")[0]);

            var deskToolPosition = new Position(0, 0);
            var deskToolSize = new Size(toolIcon.width, toolIcon.height);
            var deskTool = new Desk(deskToolPosition, deskToolSize, $("#imgDesk")[0]);

            tools.push(chairTool);
            tools.push(deskTool);

            var toolX = toolBar.margin;
            var toolY = stage.margin + toolBar.margin;


            for (var i = 0; i < tools.length; i++) {
                tools[i].move(toolX, toolY);
                everything.push(tools[i]);
                //tools[i].draw();
                toolY += toolIcon.height + toolBar.margin;
            }

        }

        function mouseDown(ev)
        {
            var mousePosition = new MousePosition(ev);

            if (mousePosition.position.x < toolBar.width)
            {//鼠标在toolBar内
                for (var i = 0; i < tools.length;i++)
                {
                    var tool = tools[i];
                    if (tool.isContainPoint(mousePosition.position.x, mousePosition.position.y))
                    {//鼠标在toolIcon内
                        var position = new Position(0, 0);
                        var size = new Size(toolIcon.width, toolIcon.height);
                        switch (tool.equipmentType)
                        {
                            case equipmentTypes.chair:
                                mouseDownObj = new Chair(position,size, $("#imgChair")[0]);
                                break;
                            case equipmentTypes.desk:
                                mouseDownObj = new Desk(position, size, $("#imgDesk")[0]);
                                break;
                        }
                    }
                }
                
            }

            //alert(mousePosition.position.x+"_"+mousePosition.position.y);
        }

        function mouseMove(ev) {
            var mousePosition = new MousePosition(ev);

            if (mouseDownObj != null)
            {
                if (mouseDownObj.type == types.equipment)
                {
                    mouseDownObj.move(mousePosition.position.x, mousePosition.position.y);
                }
            }

            drawEverything();
            //alert(mousePosition.position.x+"_"+mousePosition.position.y);
        }

        function mouseUp(ev)
        {
            var mousePosition = new MousePosition(ev);

            if (mouseDownObj != null) {
               
                if (mouseDownObj.isInObj(currentRoom)
                    ) {//当前鼠标选中对象在对象内
                    var newObj = mouseDownObj;
                    everything.push(newObj);
                    mouseDownObj = null;
                }
                else {
                    mouseDownObj = null;
                }
               
            }

            drawEverything();
        }

        function drawEverything()
        {
            ctx.clearRect(0, 0, stage.width, stage.height);
  
            for (var i = 0; i < everything.length; i++)
            {
                everything[i].draw();
            }

            if (mouseDownObj != null)
            {
                mouseDownObj.draw();
            }
        }
       
        //Event End

        /*===========================================================================================================================*/

        //Base Begin
        function Position(x, y)
        {
            this.x = x;
            this.y = y;
        }

        function Size(width, height)
        {
            this.width = width;
            this.height = height;
        }

        function BaseObject(position,size,type)
        {
            this.position = position;
            this.size = size;
            this.type = type;

            this.isContainPoint = isContainPoint;
            this.isInObj = isInObj;
            this.draw = drawObj;
            this.move = moveObj;
        }

        function isContainPoint(pointX, pointY)
        {
            ////此处实现二维判断，未来可拓展三围
            if (pointX > this.position.x && pointX < this.position.x + this.size.width
                && pointY > this.position.y && pointY < this.position.y + this.size.height) {
                return true;
            }
            else {
                return false;
            }
        }

        function isInObj(obj)
        {
            //此处实现二维判断，未来可拓展三围
            if (obj.isContainPoint(this.position.x, this.position.y)//左上角
                && obj.isContainPoint(this.position.x + this.size.width, this.position.y)//右上角
                && obj.isContainPoint(this.position.x, this.position.y + this.size.height)//左下角
                && obj.isContainPoint(this.position.x + this.size.width, this.position.y + this.size.height)//右下角
                  )
            {
                return true;
            }
            else
            {
                return false;
            }
        }

        function drawObj()
        {
            if (typeof (this.img) != "undefined")
            {
                ctx.drawImage(this.img, this.position.x, this.position.y, this.size.width, this.size.height);
            }
        }

        function moveObj(x, y)
        {
            this.position.x = x;
            this.position.y = y;
        }

        //Base End

        /*===========================================================================================================================*/

        //Equipment Begin
        
        function Equipment(position,size, img, equipmentType) {

            BaseObject.apply(this, new Array(position,size, Equipment.name));
            this.equipmentType = equipmentType;
            this.img = img;
        }

        function Chair(position, size, img) {
            Equipment.apply(this, new Array(position, size, img, Chair.name));
        }

        function Desk(position, size, img) {
            Equipment.apply(this, new Array(position, size, img, Desk.name));
        }

        //Equipment End

        /*===========================================================================================================================*/

        //Room Begin

        function Room(position,size) {
            BaseObject.apply(this, new Array(position, size, Room.name));
            this.equipments = new Array();
            this.draw = drawRoom;
            this.addEquipment = addEquipment;
        }

        function drawRoom() {
            ctx.strokeStyle = "black";
            ctx.strokeRect(this.position.x, this.position.y, this.size.width, this.size.height);
        }

        function addEquipment(equipment)
        {
            this.equipments.push(equipment);
        }

        //Room End

        /*===========================================================================================================================*/

        //Common Begin

        function showLoading()
        {
            var screenHeight = document.body.offsetHeight;
            var screenWidth = document.body.offsetWidth;

            $("#divLoading").css("height", screenHeight);
            $("#divLoading").show();

        }

        function hideLoading() {
            $("#divLoading").hide();
        }

        function refreshLoadPercent()
        {
            $("#divLoading").text("loading..."+ sourceCount/totalSourceCount*100 + "%");
        }

        //Common End

        /*===========================================================================================================================*/

        //MousePosition Begin

        function MousePosition(ev)
        {
            var mx;
            var my;

            if (ev.layerX || ev.layerX == 0)
            {
                mx = ev.layerX;
                my = ev.layerY;
            }
            else if(ev.offsetX||ev.offsetX==0){
                mx = ev.offsetX;
                my = ev.offsetY;
            }

            this.position = new Position(mx, my);
        }

        //MousePosition End

        /*===========================================================================================================================*/

       
    </script>
</head>
<body>
    <form>
        <div id="divLoading" style="position:absolute; width:100%; z-index:999;display:none;background-color:beige">
            loading...0%
        </div>

        <div>
            长：<input id="txtRoomWidth" type="text" value="500" />
            宽：<input id="txtRoomHeight" type="text" value="500" />
            <input type="button" id="btnEnter" value="确定" onclick="return generateRoom()" />
        </div>

        <div>
            <canvas id="roomCanvas" style="border:1px solid black" width="500" height="500"></canvas>
        </div>

        <div id="divImg">
            <img id="imgChair" src="~/Source/Chair.png" width="0" height="0" />
            <img id="imgDesk" src="~/Source/Desk.png" width="0" height="0" />
            <script>
                $("img").each(function () {
                    this.onload = function () {
                        sourceCount++;
                    }
                })
            </script>
        </div>

    </form>
   
    
</body>
</html>
