@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title></title>
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/DesignRoom/BaseObject.js"></script>
    <script src="~/Scripts/DesignRoom/Stage.js"></script>
    <script src="~/Scripts/DesignRoom/ToolBar.js"></script>
    <script src="~/Scripts/DesignRoom/Equipment.js"></script>
    <script src="~/Scripts/DesignRoom/Room.js"></script>
    <script type="text/javascript">
        /*===========================================================================================================================*/

        //Global Variable Begin

        var everything=new Array();
        var loadingInterval;
        var canvas;
        var ctx;
        var currentRoom;
        var toolBar
        //too尺寸
        var toolIcon
        //鼠标按下选中的工具
        var mouseDownTool;
        //鼠标按下选中的设备
        var mouseDownEquipment;
        //当前选中对象
        var currentCheckedObj;

        var sourceCount = 0;
        var totalSourceCount = 2;

        var stage = new Stage(new Position(0, 0), new Size(500, 500), 10);
        

        //Global Variable End

        /*===========================================================================================================================*/
        
        //Main Begin

        $(function () {
            canvas = document.getElementById("roomCanvas");
            ctx = canvas.getContext("2d");

            canvas.addEventListener("mousedown", mouseDown, false);
            canvas.addEventListener("mousemove", mouseMove, false);
            canvas.addEventListener("mouseup", mouseUp, false);

            showLoading();
            loadingInterval = window.setInterval(load, 100);
        });

        //Main End

        /*===========================================================================================================================*/

        //Event Begin

        function load() {
            refreshLoadPercent();
            if (sourceCount < totalSourceCount) {
                return;
            }
            else {
                window.clearInterval(loadingInterval);
                window.setTimeout(hideLoading,1000);
                generateRoom();
                drawEverything();
            }
        }

        function generateRoom() {
            //重新生成要清空everything
            everything = new Array();
            everything.push(stage);

            var width = $("#txtRoomWidth").val();
            var height = $("#txtRoomHeight").val();

            if (width.trim() != "") {
                width = new Number(width);
            }
            else {
                width = 0;
            }
            if (height.trim() != "") {
                height = new Number(height);
            }
            else {
                height = 0;
            }

            //创建一个toolBar
            var toolBarPosition = new Position(0, 10);
            var toolBarSize = new Size(50, height);
            var toolBarMargin = 5;
            toolBar = new ToolBar(toolBarPosition, toolBarSize, toolBarMargin);
            everything.push(toolBar);

            var roomX = stage.margin + toolBar.size.width;
            var roomY = stage.margin;

            var roomWidth = width;
            var roomHeight = height;

            stage.size.width = roomWidth;
            stage.size.height = roomHeight;
            stage.position.x = roomX;
            stage.position.y = roomY;

            var canvasWidth = stage.margin * 2 + roomWidth + toolBar.size.width;
            var canvasHeight = stage.margin * 2 + roomHeight;

            $(canvas).attr("width", canvasWidth);
            $(canvas).attr("height", canvasHeight);
             
            var roomPosition = new Position(roomX, roomY);
            var roomSize = new Size(roomWidth, roomHeight);

            currentRoom = new Room(roomPosition, roomSize);

            everything.push(currentRoom);

            //currentRoom.draw();

            generateTools();
            return false;
        }

        function generateTools() {
            toolBar.removeAllTool();
            
            toolIcon = {
                width: toolBar.size.width - 2 * toolBar.margin,
                height: toolBar.size.width - 2 * toolBar.margin,
            };

            var chairToolPosition = new Position(0, 0);
            var chairToolSize = new Size(toolIcon.width, toolIcon.height);
            var chairTool = new Tool(chairToolPosition, chairToolSize, $("#imgChair")[0],Chair.name);

            var deskToolPosition = new Position(0, 0);
            var deskToolSize = new Size(toolIcon.width, toolIcon.height);
            var deskTool = new Tool(deskToolPosition, deskToolSize, $("#imgDesk")[0],Desk.name);

            toolBar.addTool(chairTool);
            toolBar.addTool(deskTool);

            var toolX = toolBar.margin;
            var toolY = stage.margin + toolBar.margin;


            for (var i = 0; i < toolBar.tools.length; i++) {
                toolBar.tools[i].move(toolX, toolY);
                everything.push(toolBar.tools[i]);
             
                toolY += toolIcon.height + toolBar.margin;
            }

        }

        function mouseDown(ev)
        {
            var mousePosition = new MousePosition(ev);

            if (toolBar.isContainPoint(mousePosition.position.x,mousePosition.position.y))
            {//鼠标在toolBar内
                for (var i = 0; i < toolBar.tools.length; i++)
                {
                    var tool = toolBar.tools[i];
                    if (tool.isContainPoint(mousePosition.position.x, mousePosition.position.y))
                    {//鼠标在toolIcon内
                        var position = new Position(0, 0);
                        var size = new Size(toolIcon.width, toolIcon.height);
                        switch (tool.toolType)
                        {
                            case Chair.name:
                                mouseDownTool = new Chair(position,size, $("#imgChair")[0]);
                                break;
                            case Desk.name:
                                mouseDownTool = new Desk(position, size, $("#imgDesk")[0]);
                                break;
                        }
                        break;
                    }
                }   
            }
            else if (stage.isContainPoint(mousePosition.position.x, mousePosition.position.y))
            {//鼠标在stage内
            
                for (var i = 0; i < currentRoom.equipments.length; i++)
                {
                    var equipment = currentRoom.equipments[i];

                    if (equipment.isContainPoint(mousePosition.position.x, mousePosition.position.y)) {//鼠标在equipment内
                        mouseDownEquipment = equipment;
                        break;
                        }
                }
            }
            if (mouseDownTool != null || mouseDownEquipment != null) {
                canvas.style.cursor = "pointer";
            }

            for (var i = everything.length-1; i >= 0; i--)
            {//从数据后往前找选中的对象
                if(everything[i].isContainPoint(mousePosition.position.x, mousePosition.position.y))
                {
                    currentCheckedObj = everything[i];
                    break;
                }
            }
            //alert(mousePosition.position.x+"_"+mousePosition.position.y);
        }

        function mouseMove(ev) {
            var mousePosition = new MousePosition(ev);

            if (mouseDownTool != null)
            {             
                if (mouseDownTool.type == Equipment.name)
                {
                        mouseDownTool.move(mousePosition.position.x - mouseDownTool.size.width / 2, mousePosition.position.y - mouseDownTool.size.height / 2); 
                }
            }
            if (mouseDownEquipment != null)
            {//选中了房间内的设备移动
                if (mouseDownEquipment.type == Equipment.name) {             
                    mouseDownEquipment.move(mousePosition.position.x - mouseDownEquipment.size.width / 2, mousePosition.position.y - mouseDownEquipment.size.height / 2);
                }
            }

            if (mouseDownTool != null || mouseDownEquipment != null)
            {
                canvas.style.cursor = "pointer";
            }

            drawEverything();
            //alert(mousePosition.position.x+"_"+mousePosition.position.y);
        }

        function mouseUp(ev)
        {
            var mousePosition = new MousePosition(ev);

            if (mouseDownTool != null) {
                if (mouseDownTool.isInObj(currentRoom)
                    ) {//当前鼠标选中对象在Room对象内
                    var newObj = mouseDownTool;
               
                    if (everything.indexOf(newObj) < 0)
                    {//不存在时才添加
                        everything.push(newObj);
                    }

                    if (newObj.type == Equipment.name)
                    {//如果是设备
                       currentRoom.addEquipment(newObj);
                    }
                   
                   
                }
                mouseDownTool = null;
               
            }
            if (mouseDownEquipment != null)
            {
                if (!mouseDownEquipment.isInObj(currentRoom))
                {
                    var indexInEveryThing = everything.indexOf(mouseDownEquipment);
                    if (indexInEveryThing >= 0) {//不存在时才添加
                        everything.splice(indexInEveryThing, 1);
                    }

                    if (mouseDownEquipment.type == Equipment.name) {//如果是设备
                        currentRoom.removeEquipment(mouseDownEquipment);
                    }
                    currentCheckedObj = null;
                }

                mouseDownEquipment = null;
            }
           
            if (mouseDownTool == null && mouseDownEquipment == null) {
                canvas.style.cursor = "default";
            }

            drawEverything();
        }

        function drawEverything()
        {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
  
            for (var i = 0; i < everything.length; i++)
            {
                everything[i].draw();
            }

            if (currentCheckedObj != null) {
              
                if (currentCheckedObj.type == Equipment.name) {//当前选中了设备       
                    currentCheckedObj.check();
                }
            }

            if (mouseDownTool != null)
            {
                mouseDownTool.draw();
            }
        }

        function showLoading()
        {
            var screenHeight = document.body.offsetHeight;
            var screenWidth = document.body.offsetWidth;

            $("#divLoading").css("height", screenHeight);
            $("#divLoading").show();

        }

        function hideLoading() {
            $("#divLoading").hide();
        }

        function refreshLoadPercent()
        {
            $("#divLoading").text("loading..."+ sourceCount/totalSourceCount*100 + "%");
        }

        //Event End
        /*===========================================================================================================================*/
    </script>
</head>
<body>
    <form>
        <div id="divLoading" style="position:absolute; width:100%; z-index:999;display:none;background-color:beige">
            loading...0%
        </div>

        <div>
            长：<input id="txtRoomWidth" type="text" value="500" />
            宽：<input id="txtRoomHeight" type="text" value="500" />
            <input type="button" id="btnEnter" value="确定" onclick="return generateRoom()" />
        </div>

        <div>
            <canvas id="roomCanvas" style="border:1px solid black" width="500" height="500"></canvas>
        </div>

        <div id="divImg">
            <img id="imgChair" src="~/Source/Chair.png" width="0" height="0" />
            <img id="imgDesk" src="~/Source/Desk.png" width="0" height="0" />
            <script>
                $("img").each(function () {
                    this.onload = function () {
                        sourceCount++;
                    }
                })
            </script>
        </div>

    </form>
   
    
</body>
</html>
